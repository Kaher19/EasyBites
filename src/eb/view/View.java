/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eb.view;

import eb.controller.Controller;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerListModel;
import javax.swing.SpinnerModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kirbey
 */
public class View extends javax.swing.JFrame {
//Declaración de variables globales    
    private final DefaultTableModel modelPlatillosTable = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column < 0;
            }
        };
    
    private final DefaultTableModel modelPedidosTable = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column < 0;
            }
        };
    
    private final ImageIcon ebIcon = new ImageIcon("src/eb/images/eb_Icon.png");
    private final Image icon = ebIcon.getImage();
    private final Controller control = new Controller();
    
    final String spinnerNumbers[] = {"1","2","3","4","5","6","7","8","9","10"};
    private final SpinnerModel spinnerModel =  new SpinnerListModel(spinnerNumbers);

    /**
     * Se crea new form Model
     */
    public View() {
        initComponents();
        setVisible(true);
        this.setLocationRelativeTo(null);
        this.setTitle("EasyBites");
        this.setIconImage(icon);
        this.beginTable(modelPlatillosTable);
        String[] header = {"Cantidad", "Producto", "Precio", "Tiempo"};
        this.beginTable(modelPedidosTable, header);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabWindow = new javax.swing.JFrame();
        twCancelBTN = new javax.swing.JButton();
        twTableScrollPane = new javax.swing.JScrollPane();
        platillosTable = new javax.swing.JTable();
        twSelecciónPlatilloLabel = new javax.swing.JLabel();
        cantidadProductoSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        menuPedidosPopUp = new javax.swing.JPopupMenu();
        eliminarOrdenOpcionPopUpMenu = new javax.swing.JMenuItem();
        mwEasyBitesLabel = new java.awt.Label();
        mwSeleccionProductosTPane = new javax.swing.JTabbedPane();
        productosTab = new javax.swing.JPanel();
        mwEntradasBTN = new javax.swing.JButton();
        mwPostresBTN = new javax.swing.JButton();
        mwPlatosFuertesBTN = new javax.swing.JButton();
        mwBebidasBTN = new javax.swing.JButton();
        listaPedidosTab = new javax.swing.JPanel();
        ltSelectorMesaCB = new javax.swing.JComboBox<>();
        ltSelectMesaTableScrollPane = new javax.swing.JScrollPane();
        pedidosTable = new javax.swing.JTable();
        administracionTab = new javax.swing.JPanel();
        atAgregarPlatilloLabel = new javax.swing.JLabel();
        atTipoPlatilloCB = new javax.swing.JComboBox<>();
        atAreaNombreTF = new javax.swing.JTextField();
        mwPrecioPlatilloLabel = new javax.swing.JLabel();
        atPrecioPlatilloTF = new javax.swing.JTextField();
        atAgregarPlatilloLabel2 = new javax.swing.JLabel();
        atAgregarBTN = new javax.swing.JButton();

        tabWindow.setTitle("Seleccionar Platillos");
        tabWindow.setIconImage(getIconImage());
        tabWindow.setMinimumSize(new java.awt.Dimension(800, 600));

        twCancelBTN.setText("Cancelar");
        twCancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twCancelBTNActionPerformed(evt);
            }
        });

        platillosTable.setModel(modelPlatillosTable);
        platillosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                platillosTableMouseClicked(evt);
            }
        });
        twTableScrollPane.setViewportView(platillosTable);

        twSelecciónPlatilloLabel.setFont(new java.awt.Font("MV Boli", 0, 48)); // NOI18N
        twSelecciónPlatilloLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        twSelecciónPlatilloLabel.setText("Seleccione platillo o bebida");
        twSelecciónPlatilloLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        cantidadProductoSpinner.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cantidadProductoSpinner.setModel(spinnerModel);

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        jLabel1.setText("Seleccionar cantidad");

        javax.swing.GroupLayout tabWindowLayout = new javax.swing.GroupLayout(tabWindow.getContentPane());
        tabWindow.getContentPane().setLayout(tabWindowLayout);
        tabWindowLayout.setHorizontalGroup(
            tabWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabWindowLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(cantidadProductoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(twTableScrollPane)
                    .addComponent(twSelecciónPlatilloLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabWindowLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(twCancelBTN)))
                .addContainerGap())
        );
        tabWindowLayout.setVerticalGroup(
            tabWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(twSelecciónPlatilloLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(57, 57, 57)
                .addGroup(tabWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cantidadProductoSpinner))
                .addGap(18, 18, 18)
                .addComponent(twTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addGap(46, 46, 46)
                .addComponent(twCancelBTN)
                .addContainerGap())
        );

        eliminarOrdenOpcionPopUpMenu.setText("Eliminar Orden");
        eliminarOrdenOpcionPopUpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarOrdenOpcionPopUpMenuActionPerformed(evt);
            }
        });
        menuPedidosPopUp.add(eliminarOrdenOpcionPopUpMenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(800, 600));

        mwEasyBitesLabel.setAlignment(java.awt.Label.CENTER);
        mwEasyBitesLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mwEasyBitesLabel.setFont(new java.awt.Font("MV Boli", 1, 48)); // NOI18N
        mwEasyBitesLabel.setText("EasyBites");

        mwSeleccionProductosTPane.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N

        productosTab.setLayout(new java.awt.GridLayout(2, 3));

        mwEntradasBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        mwEntradasBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_Entrada.png"))); // NOI18N
        mwEntradasBTN.setText("Entradas");
        mwEntradasBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mwEntradasBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mwEntradasBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mwEntradasBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mwEntradasBTNActionPerformed(evt);
            }
        });
        productosTab.add(mwEntradasBTN);

        mwPostresBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        mwPostresBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_Dessert.png"))); // NOI18N
        mwPostresBTN.setText("Postres");
        mwPostresBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mwPostresBTN.setDisabledIcon(null);
        mwPostresBTN.setDisabledSelectedIcon(null);
        mwPostresBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mwPostresBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mwPostresBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mwPostresBTNActionPerformed(evt);
            }
        });
        productosTab.add(mwPostresBTN);

        mwPlatosFuertesBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        mwPlatosFuertesBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_PlatoFuerte.png"))); // NOI18N
        mwPlatosFuertesBTN.setText("Platos Fuertes");
        mwPlatosFuertesBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mwPlatosFuertesBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mwPlatosFuertesBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mwPlatosFuertesBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mwPlatosFuertesBTNActionPerformed(evt);
            }
        });
        productosTab.add(mwPlatosFuertesBTN);

        mwBebidasBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        mwBebidasBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_Bebidas.png"))); // NOI18N
        mwBebidasBTN.setText("Bebidas");
        mwBebidasBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mwBebidasBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mwBebidasBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mwBebidasBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mwBebidasBTNActionPerformed(evt);
            }
        });
        productosTab.add(mwBebidasBTN);

        mwSeleccionProductosTPane.addTab("Productos", productosTab);

        ltSelectorMesaCB.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        ltSelectorMesaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mesa 1", "Mesa 2", "Mesa 3", "Mesa 4" }));
        ltSelectorMesaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ltSelectorMesaCBActionPerformed(evt);
            }
        });

        pedidosTable.setModel(modelPedidosTable);
        pedidosTable.setComponentPopupMenu(menuPedidosPopUp);
        pedidosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pedidosTableMouseClicked(evt);
            }
        });
        ltSelectMesaTableScrollPane.setViewportView(pedidosTable);

        javax.swing.GroupLayout listaPedidosTabLayout = new javax.swing.GroupLayout(listaPedidosTab);
        listaPedidosTab.setLayout(listaPedidosTabLayout);
        listaPedidosTabLayout.setHorizontalGroup(
            listaPedidosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaPedidosTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ltSelectorMesaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(listaPedidosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ltSelectMesaTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(145, 145, 145))
        );
        listaPedidosTabLayout.setVerticalGroup(
            listaPedidosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaPedidosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ltSelectorMesaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ltSelectMesaTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
        );

        mwSeleccionProductosTPane.addTab("Lista de pedidos", listaPedidosTab);

        atAgregarPlatilloLabel.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        atAgregarPlatilloLabel.setText("Agregar nuevo platillo o bebida");

        atTipoPlatilloCB.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        atTipoPlatilloCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrada", "Plato Fuerte", "Postre", "Bebida" }));

        atAreaNombreTF.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        atAreaNombreTF.setText("Nuevo nombre");
        atAreaNombreTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atAreaNombreTFActionPerformed(evt);
            }
        });

        mwPrecioPlatilloLabel.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        mwPrecioPlatilloLabel.setText("Precio del platillo");

        atPrecioPlatilloTF.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        atPrecioPlatilloTF.setText("000.0");

        atAgregarPlatilloLabel2.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        atAgregarPlatilloLabel2.setText("Nombre del platillo");

        atAgregarBTN.setText("Agregar...");
        atAgregarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atAgregarBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout administracionTabLayout = new javax.swing.GroupLayout(administracionTab);
        administracionTab.setLayout(administracionTabLayout);
        administracionTabLayout.setHorizontalGroup(
            administracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(administracionTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(administracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(administracionTabLayout.createSequentialGroup()
                        .addComponent(atAgregarPlatilloLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(administracionTabLayout.createSequentialGroup()
                        .addComponent(atAreaNombreTF, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addGroup(administracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(administracionTabLayout.createSequentialGroup()
                                .addComponent(mwPrecioPlatilloLabel)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(administracionTabLayout.createSequentialGroup()
                                .addComponent(atPrecioPlatilloTF, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(atTipoPlatilloCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(133, 133, 133))))
                    .addGroup(administracionTabLayout.createSequentialGroup()
                        .addComponent(atAgregarBTN)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(administracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(administracionTabLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(atAgregarPlatilloLabel2)
                    .addContainerGap(529, Short.MAX_VALUE)))
        );
        administracionTabLayout.setVerticalGroup(
            administracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(administracionTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atAgregarPlatilloLabel)
                .addGap(27, 27, 27)
                .addComponent(mwPrecioPlatilloLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(administracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atTipoPlatilloCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atAreaNombreTF)
                    .addComponent(atPrecioPlatilloTF))
                .addGap(18, 18, 18)
                .addComponent(atAgregarBTN)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(administracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(administracionTabLayout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(atAgregarPlatilloLabel2)
                    .addContainerGap(83, Short.MAX_VALUE)))
        );

        mwSeleccionProductosTPane.addTab("Administración", administracionTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mwSeleccionProductosTPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(mwEasyBitesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(263, 263, 263))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mwEasyBitesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mwSeleccionProductosTPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void twCancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twCancelBTNActionPerformed
        // TODO add your handling code here:
        tabWindow.setVisible(false);
    }//GEN-LAST:event_twCancelBTNActionPerformed

    private void mwEntradasBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mwEntradasBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pe"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_mwEntradasBTNActionPerformed

    private void mwPostresBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mwPostresBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pp"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_mwPostresBTNActionPerformed

    private void mwPlatosFuertesBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mwPlatosFuertesBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pf"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_mwPlatosFuertesBTNActionPerformed

    private void mwBebidasBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mwBebidasBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pb"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_mwBebidasBTNActionPerformed

    private void atAgregarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atAgregarBTNActionPerformed
        // TODO add your handling code here:
        String saucer = atAreaNombreTF.getText();
        String type = atTipoPlatilloCB.getSelectedItem().toString();
        float precio = Float.parseFloat(atPrecioPlatilloTF.getText());
        try {
            if(control.existThisSaucer(saucer)==true){
                JOptionPane.showMessageDialog(this, "El platillo " +saucer +
                " ya existe", "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                switch(type){
                    case "Entrada": type = "pe";
                        break;
                    case "Plato Fuerte": type = "pf";
                        break;
                    case "Postre": type = "pp";
                        break;
                    case "Bebida": type = "pb";
                        break;    
                }
                control.addNewSaucer(type, saucer, precio);
                JOptionPane.showMessageDialog(this, "El platillo " +saucer +
                " se añadió exitosamente", "Hecho", JOptionPane.INFORMATION_MESSAGE);
            }
            } catch (SQLException ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        atAreaNombreTF.setText("Nuevo nombre");
        atPrecioPlatilloTF.setText("000.0");
    }//GEN-LAST:event_atAgregarBTNActionPerformed

    private void atAreaNombreTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atAreaNombreTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atAreaNombreTFActionPerformed

    private void ltSelectorMesaCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ltSelectorMesaCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ltSelectorMesaCBActionPerformed

    private void pedidosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pedidosTableMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            
        }
    }//GEN-LAST:event_pedidosTableMouseClicked

    private void platillosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_platillosTableMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            if(this.existSaucerInList(modelPlatillosTable, platillosTable, modelPedidosTable, pedidosTable)==false){
                this.addSaucerToList();
                //this.updateAmountSaucerAtList(platillo);
                JOptionPane.showMessageDialog(tabWindow, "El platillo " +modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 0) +
                " se añadió a la lista", "Hecho", JOptionPane.INFORMATION_MESSAGE);
            } 
            else {
                JOptionPane.showMessageDialog(tabWindow, "El platillo " +modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 0) +
                " aumento su valor en la lista", "Hecho", JOptionPane.INFORMATION_MESSAGE);
                this.updateAmountSaucerAtList(modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 0).toString());
            }
        }
    }//GEN-LAST:event_platillosTableMouseClicked

    private void eliminarOrdenOpcionPopUpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarOrdenOpcionPopUpMenuActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "El platillo " +modelPedidosTable.getValueAt(pedidosTable.getSelectedRow(), 0) +
        " puede ser eliminado", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_eliminarOrdenOpcionPopUpMenuActionPerformed

    /*
    Funciones  creadas por mi
    */
    
    //Este metodo carga los datos para la tabla
    private void cargarTabla(String[][] datos, javax.swing.table.DefaultTableModel model, javax.swing.JTable table){
        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        table.setGridColor(Color.BLUE);
        table.setShowHorizontalLines(false);
        table.doLayout();
        
        //Función que rellena los datos de la tabla con los datos obtenidos
        String[] line = new String[datos[0].length];
        for (String[] dato : datos) {
            for (int column = 0; column<line.length; column++) {
                line[column] = "" + dato[column];
            }
            model.addRow(line);
        }
    }
    
    //Comprueba si el elemento que añadiremos no se encuentra aún en la lista
    //Si ya se encuentra solo se aumenta el contador
    private boolean existSaucerInList(javax.swing.table.DefaultTableModel originModel, JTable originTable, javax.swing.table.DefaultTableModel listModel, JTable listTable){
        boolean exist = false;
        int filas;
        if(listModel.getRowCount()>=1){
            String firstValue = originModel.getValueAt(originTable.getSelectedRow(), 0).toString();
            filas = listModel.getRowCount();
            for(int i=0; i<filas; i++){
                if(firstValue.equals(listTable.getValueAt(i, 1).toString())){
                    exist = true;
                }
            }
        }
        return exist;
    }
    
    //Método que inicializa la ventana tableWindow
    private void beginTableWindow(){
        tabWindow.setVisible(true);
        tabWindow.setLocationRelativeTo(null);
        tabWindow.setIconImage(icon);
    }
    
    //Método que inicializa la tabla con la cabecera por defecto
    private void beginTable(javax.swing.table.DefaultTableModel model){
        String elementos[] = control.getHeader();
        for (String elemento : elementos) {
            model.addColumn(elemento);
        }
    }
    
    //Método que recibe un String[]. Inicializa la tabla con una cabecera personalizada
    private void beginTable(javax.swing.table.DefaultTableModel model, String[] header){
        String elementos[] = header;
        for (String elemento : elementos) {
            model.addColumn(elemento);
        }
    }
    
    //Carga los datos del tipo de salsa recibido String type
    private String[][] loadSaucersByType(String type){
        String[][] table = null;
        try {
            table = control.getThisTypeOfSauces(type);
        } catch (SQLException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
        return table;
    }
    
    //Deja vacía la tabla exceptuando el header, el cual se mantiene
    private void limpiarTabla(javax.swing.table.DefaultTableModel model, javax.swing.JTable table){
        int tableTotalRow = table.getRowCount();
        if (tableTotalRow != 0){ 
            //Una vez obtenido el table limpiamos la tabla
            for(int i = tableTotalRow-1; i >= 0; i--){
                model.removeRow(i);
            }
        }
    }
    
    private void addSaucerToList(){
        //Obtiene el valor de la columna Platillo
        //Obtiene el nombre de la columna Precio
        //Obtiene la cantidad de platillos del jSpinner
        String[] fila = new String[4];
        fila[0] = cantidadProductoSpinner.getValue().toString();
        fila[1]= modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 0).toString();
        fila[2]= modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 1).toString();
        modelPedidosTable.addRow(fila);
    }
    
    private void updateAmountSaucerAtList(String platillo){
        int oldValue;
        int newValue;
        int totalValue;
        int rowCount;
        rowCount = pedidosTable.getRowCount();
        newValue = Integer.parseInt(cantidadProductoSpinner.getValue().toString());
        oldValue = Integer.parseInt(modelPedidosTable.getValueAt(0, 0).toString());
        totalValue = oldValue+newValue;
        for(int i=0; i<rowCount; i++){
            if(platillo.equals(modelPedidosTable.getValueAt(i, 1).toString())){
                modelPedidosTable.setValueAt(totalValue, i, 0);
            }
        }
    }
    
    //Función que realiza una espera de 1000ms(1 segundo)
    private static void delaySegundo(){      
        try{
            Thread.sleep(1000);
        }
        catch(InterruptedException e){
        }          
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel administracionTab;
    private javax.swing.JButton atAgregarBTN;
    private javax.swing.JLabel atAgregarPlatilloLabel;
    private javax.swing.JLabel atAgregarPlatilloLabel2;
    private javax.swing.JTextField atAreaNombreTF;
    private javax.swing.JTextField atPrecioPlatilloTF;
    private javax.swing.JComboBox<String> atTipoPlatilloCB;
    private javax.swing.JSpinner cantidadProductoSpinner;
    private javax.swing.JMenuItem eliminarOrdenOpcionPopUpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel listaPedidosTab;
    private javax.swing.JScrollPane ltSelectMesaTableScrollPane;
    private javax.swing.JComboBox<String> ltSelectorMesaCB;
    private javax.swing.JPopupMenu menuPedidosPopUp;
    private javax.swing.JButton mwBebidasBTN;
    private java.awt.Label mwEasyBitesLabel;
    private javax.swing.JButton mwEntradasBTN;
    private javax.swing.JButton mwPlatosFuertesBTN;
    private javax.swing.JButton mwPostresBTN;
    private javax.swing.JLabel mwPrecioPlatilloLabel;
    private javax.swing.JTabbedPane mwSeleccionProductosTPane;
    private javax.swing.JTable pedidosTable;
    private javax.swing.JTable platillosTable;
    private javax.swing.JPanel productosTab;
    private javax.swing.JFrame tabWindow;
    private javax.swing.JButton twCancelBTN;
    private javax.swing.JLabel twSelecciónPlatilloLabel;
    private javax.swing.JScrollPane twTableScrollPane;
    // End of variables declaration//GEN-END:variables
}

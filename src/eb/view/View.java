/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eb.view;

import eb.controller.Controller;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerListModel;
import javax.swing.SpinnerModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kirbey
 */
public class View extends javax.swing.JFrame {
//Declaración de variables globales    
    private final DefaultTableModel modelPlatillosTable = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column < 0;
            }
        };
    
    private final DefaultTableModel modelPedidosTable = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column < 0;
            }
        };
    
    //Establecemos el icono de la aplicación
    private final ImageIcon ebIcon = new ImageIcon("src/eb/images/eb_Icon.png");
    private final Image icon = ebIcon.getImage();
    
    //Inicializamos la clase controller
    private final Controller control = new Controller();
    
    //Inicia las variables del spinner
    final String spinnerNumbers[] = {"1","2","3","4","5","6","7","8","9","10"};
    private final SpinnerModel spinnerModel =  new SpinnerListModel(spinnerNumbers);
    
    //Inicializamos las variables e instancias correspondientes para la hora del sistema
    private final Calendar calendario = Calendar.getInstance();
    private int segundos = 0;
    private int minutos = 0;
    private int horas = 0;

    /**
     * Creamos la forma View()
     */
    public View() {
        initComponents();
        setVisible(true);
        this.setLocationRelativeTo(null);
        this.setTitle("EasyBites");
        this.setIconImage(icon);
        this.beginTable(modelPlatillosTable);
        String[] header = {"Cantidad", "Producto", "Precio", "Hora"};
        this.beginTable(modelPedidosTable, header);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        windowTablaPedidos = new javax.swing.JFrame();
        twVolverBTN = new javax.swing.JButton();
        twTableScrollPane = new javax.swing.JScrollPane();
        platillosTable = new javax.swing.JTable();
        twSelecciónPlatilloLabel = new javax.swing.JLabel();
        cantidadProductoSpinner = new javax.swing.JSpinner();
        seleccionarCantidadLabel = new javax.swing.JLabel();
        menuPedidosPopUp = new javax.swing.JPopupMenu();
        cancelarPedidoOpcionPopUpMenu = new javax.swing.JMenuItem();
        mwEasyBitesLabel = new java.awt.Label();
        mwTabPane = new javax.swing.JTabbedPane();
        tpTabProductos = new javax.swing.JPanel();
        tabPEntradasBTN = new javax.swing.JButton();
        tabPPostresBTN = new javax.swing.JButton();
        tabPPlatosFuertesBTN = new javax.swing.JButton();
        tabPBebidasBTN = new javax.swing.JButton();
        tpTabListaPedidos = new javax.swing.JPanel();
        tabLPSelectorMesaCB = new javax.swing.JComboBox<>();
        tabLPSelectMesaTableScrollPane = new javax.swing.JScrollPane();
        pedidosTable = new javax.swing.JTable();
        tabLPTotalLabel = new javax.swing.JLabel();
        tabLPTotalTextField = new javax.swing.JTextField();
        tabLP = new javax.swing.JLabel();
        tabLPPagadoBTN = new javax.swing.JButton();
        ttpTabAdministracion = new javax.swing.JPanel();
        tabATipoPlatilloCB = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        tabANombrePlatilloLabel = new javax.swing.JLabel();
        tabAAgregarBTN = new javax.swing.JButton();
        tabAAreaNombreTF = new javax.swing.JTextField();
        tabAPrecioPlatilloTF = new javax.swing.JTextField();
        tabAPrecioPlatilloLabel = new javax.swing.JLabel();
        tabAAgregarPlatilloLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tabANombrePlatilloLabel1 = new javax.swing.JLabel();
        tabAAgregarBTN1 = new javax.swing.JButton();
        tabAAgregarPlatilloLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        windowTablaPedidos.setTitle("Seleccionar Platillos");
        windowTablaPedidos.setIconImage(getIconImage());
        windowTablaPedidos.setMinimumSize(new java.awt.Dimension(800, 600));

        twVolverBTN.setText("Volver");
        twVolverBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twVolverBTNActionPerformed(evt);
            }
        });

        platillosTable.setModel(modelPlatillosTable);
        platillosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                platillosTableMouseClicked(evt);
            }
        });
        twTableScrollPane.setViewportView(platillosTable);

        twSelecciónPlatilloLabel.setFont(new java.awt.Font("MV Boli", 0, 48)); // NOI18N
        twSelecciónPlatilloLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        twSelecciónPlatilloLabel.setText("Seleccione platillo o bebida");
        twSelecciónPlatilloLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        cantidadProductoSpinner.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cantidadProductoSpinner.setModel(spinnerModel);

        seleccionarCantidadLabel.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        seleccionarCantidadLabel.setText("Seleccionar cantidad");

        javax.swing.GroupLayout windowTablaPedidosLayout = new javax.swing.GroupLayout(windowTablaPedidos.getContentPane());
        windowTablaPedidos.getContentPane().setLayout(windowTablaPedidosLayout);
        windowTablaPedidosLayout.setHorizontalGroup(
            windowTablaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(windowTablaPedidosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(windowTablaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(windowTablaPedidosLayout.createSequentialGroup()
                        .addComponent(seleccionarCantidadLabel)
                        .addGap(27, 27, 27)
                        .addComponent(cantidadProductoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(twTableScrollPane)
                    .addComponent(twSelecciónPlatilloLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, windowTablaPedidosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(twVolverBTN)))
                .addContainerGap())
        );
        windowTablaPedidosLayout.setVerticalGroup(
            windowTablaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, windowTablaPedidosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(twSelecciónPlatilloLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(57, 57, 57)
                .addGroup(windowTablaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(seleccionarCantidadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cantidadProductoSpinner))
                .addGap(18, 18, 18)
                .addComponent(twTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addGap(46, 46, 46)
                .addComponent(twVolverBTN)
                .addContainerGap())
        );

        cancelarPedidoOpcionPopUpMenu.setText("Eliminar Orden");
        cancelarPedidoOpcionPopUpMenu.setActionCommand("Cancelar pedido");
        cancelarPedidoOpcionPopUpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarPedidoOpcionPopUpMenuActionPerformed(evt);
            }
        });
        menuPedidosPopUp.add(cancelarPedidoOpcionPopUpMenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(800, 600));

        mwEasyBitesLabel.setAlignment(java.awt.Label.CENTER);
        mwEasyBitesLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mwEasyBitesLabel.setFont(new java.awt.Font("MV Boli", 1, 48)); // NOI18N
        mwEasyBitesLabel.setText("EasyBites");

        mwTabPane.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        mwTabPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mwTabPaneFocusGained(evt);
            }
        });
        mwTabPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mwTabPaneMouseClicked(evt);
            }
        });

        tpTabProductos.setLayout(new java.awt.GridLayout(2, 3));

        tabPEntradasBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        tabPEntradasBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_Entrada.png"))); // NOI18N
        tabPEntradasBTN.setText("Entradas");
        tabPEntradasBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabPEntradasBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tabPEntradasBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tabPEntradasBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabPEntradasBTNActionPerformed(evt);
            }
        });
        tpTabProductos.add(tabPEntradasBTN);

        tabPPostresBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        tabPPostresBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_Dessert.png"))); // NOI18N
        tabPPostresBTN.setText("Postres");
        tabPPostresBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabPPostresBTN.setDisabledIcon(null);
        tabPPostresBTN.setDisabledSelectedIcon(null);
        tabPPostresBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tabPPostresBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tabPPostresBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabPPostresBTNActionPerformed(evt);
            }
        });
        tpTabProductos.add(tabPPostresBTN);

        tabPPlatosFuertesBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        tabPPlatosFuertesBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_PlatoFuerte.png"))); // NOI18N
        tabPPlatosFuertesBTN.setText("Platos Fuertes");
        tabPPlatosFuertesBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabPPlatosFuertesBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tabPPlatosFuertesBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tabPPlatosFuertesBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabPPlatosFuertesBTNActionPerformed(evt);
            }
        });
        tpTabProductos.add(tabPPlatosFuertesBTN);

        tabPBebidasBTN.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        tabPBebidasBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eb/images/eb_Bebidas.png"))); // NOI18N
        tabPBebidasBTN.setText("Bebidas");
        tabPBebidasBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabPBebidasBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tabPBebidasBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tabPBebidasBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabPBebidasBTNActionPerformed(evt);
            }
        });
        tpTabProductos.add(tabPBebidasBTN);

        mwTabPane.addTab("Productos", tpTabProductos);

        tabLPSelectorMesaCB.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        tabLPSelectorMesaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Mesa 1", "Mesa 2", "Mesa 3", "Mesa 4" }));
        tabLPSelectorMesaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabLPSelectorMesaCBActionPerformed(evt);
            }
        });

        pedidosTable.setModel(modelPedidosTable);
        pedidosTable.setComponentPopupMenu(menuPedidosPopUp);
        pedidosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pedidosTableMouseClicked(evt);
            }
        });
        tabLPSelectMesaTableScrollPane.setViewportView(pedidosTable);

        tabLPTotalLabel.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        tabLPTotalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tabLPTotalLabel.setText("Total:    $");

        tabLPTotalTextField.setEditable(false);
        tabLPTotalTextField.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        tabLPTotalTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tabLPTotalTextField.setText("0.00");
        tabLPTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabLPTotalTextFieldActionPerformed(evt);
            }
        });

        tabLP.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        tabLP.setText("Selecciona una orden");
        tabLP.setFocusable(false);
        tabLP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tabLPPagadoBTN.setLabel("Pagado");
        tabLPPagadoBTN.setName(""); // NOI18N
        tabLPPagadoBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabLPPagadoBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tpTabListaPedidosLayout = new javax.swing.GroupLayout(tpTabListaPedidos);
        tpTabListaPedidos.setLayout(tpTabListaPedidosLayout);
        tpTabListaPedidosLayout.setHorizontalGroup(
            tpTabListaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tpTabListaPedidosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpTabListaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabLPSelectMesaTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(tpTabListaPedidosLayout.createSequentialGroup()
                        .addComponent(tabLPTotalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabLPTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tabLPPagadoBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(tpTabListaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tpTabListaPedidosLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(tabLPSelectorMesaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tpTabListaPedidosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tabLP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );
        tpTabListaPedidosLayout.setVerticalGroup(
            tpTabListaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpTabListaPedidosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpTabListaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tpTabListaPedidosLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(tabLPPagadoBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tabLPSelectorMesaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tpTabListaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tabLPTotalLabel)
                        .addComponent(tabLPTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(tpTabListaPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabLPSelectMesaTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .addGroup(tpTabListaPedidosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tabLP))))
        );

        mwTabPane.addTab("Lista de pedidos", tpTabListaPedidos);

        ttpTabAdministracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ttpTabAdministracionMouseClicked(evt);
            }
        });

        tabATipoPlatilloCB.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        tabATipoPlatilloCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrada", "Plato Fuerte", "Postre", "Bebida" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tabANombrePlatilloLabel.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        tabANombrePlatilloLabel.setText("Nombre");

        tabAAgregarBTN.setText("Agregar...");
        tabAAgregarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabAAgregarBTNActionPerformed(evt);
            }
        });

        tabAAreaNombreTF.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        tabAAreaNombreTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tabAAreaNombreTF.setText("Nuevo nombre");
        tabAAreaNombreTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabAAreaNombreTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabAAreaNombreTFFocusLost(evt);
            }
        });
        tabAAreaNombreTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabAAreaNombreTFActionPerformed(evt);
            }
        });

        tabAPrecioPlatilloTF.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        tabAPrecioPlatilloTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tabAPrecioPlatilloTF.setText("000.0");

        tabAPrecioPlatilloLabel.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        tabAPrecioPlatilloLabel.setText("Precio");

        tabAAgregarPlatilloLabel.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        tabAAgregarPlatilloLabel.setText("Agregar nuevo platillo o bebida");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tabAAgregarPlatilloLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tabAAreaNombreTF)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(tabANombrePlatilloLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tabAPrecioPlatilloTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(tabAAgregarBTN))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(tabAPrecioPlatilloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(191, 191, 191)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(tabAAgregarPlatilloLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tabANombrePlatilloLabel)
                    .addComponent(tabAPrecioPlatilloLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tabAAreaNombreTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tabAAgregarBTN)
                    .addComponent(tabAPrecioPlatilloTF))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel1.setText("Administración de platillos para cada tipo de menú");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tabANombrePlatilloLabel1.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        tabANombrePlatilloLabel1.setText("Nombre del platillo");

        tabAAgregarBTN1.setText("Eliminar...");
        tabAAgregarBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabAAgregarBTN1ActionPerformed(evt);
            }
        });

        tabAAgregarPlatilloLabel1.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        tabAAgregarPlatilloLabel1.setText("Eliminar platillo o bebida");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
        });
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tabANombrePlatilloLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tabAAgregarPlatilloLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabAAgregarBTN1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabAAgregarPlatilloLabel1)
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tabANombrePlatilloLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(22, 22, 22)
                .addComponent(tabAAgregarBTN1)
                .addContainerGap())
        );

        javax.swing.GroupLayout ttpTabAdministracionLayout = new javax.swing.GroupLayout(ttpTabAdministracion);
        ttpTabAdministracion.setLayout(ttpTabAdministracionLayout);
        ttpTabAdministracionLayout.setHorizontalGroup(
            ttpTabAdministracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ttpTabAdministracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ttpTabAdministracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ttpTabAdministracionLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tabATipoPlatilloCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ttpTabAdministracionLayout.setVerticalGroup(
            ttpTabAdministracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ttpTabAdministracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ttpTabAdministracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tabATipoPlatilloCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("");

        mwTabPane.addTab("Administración", ttpTabAdministracion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mwTabPane)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(mwEasyBitesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(263, 263, 263))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mwEasyBitesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mwTabPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void twVolverBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twVolverBTNActionPerformed
        // TODO add your handling code here:
        windowTablaPedidos.setVisible(false);
    }//GEN-LAST:event_twVolverBTNActionPerformed

    private void tabPEntradasBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabPEntradasBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pe"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_tabPEntradasBTNActionPerformed

    private void tabPPostresBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabPPostresBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pp"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_tabPPostresBTNActionPerformed

    private void tabPPlatosFuertesBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabPPlatosFuertesBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pf"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_tabPPlatosFuertesBTNActionPerformed

    private void tabPBebidasBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabPBebidasBTNActionPerformed
        // TODO add your handling code here:
        this.beginTableWindow();
        this.limpiarTabla(modelPlatillosTable, platillosTable);
        this.cargarTabla(this.loadSaucersByType("pb"), modelPlatillosTable, platillosTable);
    }//GEN-LAST:event_tabPBebidasBTNActionPerformed

    private void tabAAgregarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabAAgregarBTNActionPerformed
        // TODO add your handling code here:
        String saucer = tabAAreaNombreTF.getText();
        String type = tabATipoPlatilloCB.getSelectedItem().toString();
        float precio = Float.parseFloat(tabAPrecioPlatilloTF.getText());
        try {
            if(control.existThisSaucer(saucer)==true){
                JOptionPane.showMessageDialog(this, "El platillo " +saucer +
                " ya existe", "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                switch(type){
                    case "Entrada": type = "pe";
                        break;
                    case "Plato Fuerte": type = "pf";
                        break;
                    case "Postre": type = "pp";
                        break;
                    case "Bebida": type = "pb";
                        break;    
                }
                control.addNewSaucer(type, saucer, precio);
                JOptionPane.showMessageDialog(this, "El platillo " +saucer +
                " se añadió exitosamente", "Hecho", JOptionPane.INFORMATION_MESSAGE);
            }
            } catch (SQLException ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        tabAAreaNombreTF.setText("Nuevo nombre");
        tabAPrecioPlatilloTF.setText("000.0");
    }//GEN-LAST:event_tabAAgregarBTNActionPerformed

    private void tabAAreaNombreTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabAAreaNombreTFActionPerformed
        // TODO add your handling code here:
        System.out.println("Evento: " +evt.getActionCommand());
    }//GEN-LAST:event_tabAAreaNombreTFActionPerformed

    private void tabLPSelectorMesaCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabLPSelectorMesaCBActionPerformed
        // TODO add your handling code here:
        if(evt.getActionCommand().equals("comboBoxChanged")){
            try{
                if(!tabLPSelectorMesaCB.getSelectedItem().toString().equals("Seleccionar")){
                    String mesa = tabLPSelectorMesaCB.getSelectedItem().toString();
                    if(control.isTableEmpty(mesa) == false){
                        this.limpiarTabla(modelPedidosTable, pedidosTable);
                        this.cargarTabla(control.getPedidosFromMesas(mesa), modelPedidosTable, pedidosTable);
                        this.updateTotal();
                    }
                    else {
                        JOptionPane.showMessageDialog(windowTablaPedidos, "Ingrese las ordenes para esta mesa", "Info", JOptionPane.INFORMATION_MESSAGE);
                        this.limpiarTabla(modelPedidosTable, pedidosTable);
                        this.resetTotal();
                    }
                }
                else {
                    this.limpiarTabla(modelPedidosTable, pedidosTable);
                    this.resetTotal();
                }
            } catch (SQLException ex) {
                    Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tabLPSelectorMesaCBActionPerformed

    private void pedidosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pedidosTableMouseClicked
        // TODO add your handling code here:
        switch(evt.getClickCount()){
            case 1 :
        }
        if(evt.getClickCount()==2){
            tabLP.setText("Se puede cancelar");
        }
        else {
            tabLP.setText("Selecciona una orden");
        }
        System.out.println("" +evt.getClickCount());
    }//GEN-LAST:event_pedidosTableMouseClicked

    private void platillosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_platillosTableMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            try {
                String mesa = tabLPSelectorMesaCB.getSelectedItem().toString();
                int cantidad = Integer.parseInt(cantidadProductoSpinner.getValue().toString());
                    if(!tabLPSelectorMesaCB.getSelectedItem().toString().equals("Seleccionar")){
                        String platillo = modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 0).toString();
                        int precio = Integer.parseInt(modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 1).toString());
                        if(control.existThisSaucerInThisTable(platillo, mesa)==false){
                            control.addSaucerToList(mesa, cantidad, platillo, precio);
                            this.limpiarTabla(modelPedidosTable, pedidosTable);
                            this.cargarTabla(control.getPedidosFromMesas(mesa), modelPedidosTable, pedidosTable);
                            this.updateTotal();
                            JOptionPane.showMessageDialog(windowTablaPedidos, "El platillo " +modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 0) +
                            " se añadió a la lista", "Hecho", JOptionPane.INFORMATION_MESSAGE);
                        }
                        else {
                            control.modifyQuantitySaucerToList(mesa, cantidad, platillo);
                            this.limpiarTabla(modelPedidosTable, pedidosTable);
                            this.cargarTabla(control.getPedidosFromMesas(mesa), modelPedidosTable, pedidosTable);
                            this.updateTotal();
                            JOptionPane.showMessageDialog(windowTablaPedidos, "El platillo " +modelPlatillosTable.getValueAt(platillosTable.getSelectedRow(), 0) +
                            " se sumó en la lista", "Hecho", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    else {
                        JOptionPane.showMessageDialog(windowTablaPedidos, "Primero seleccione una mesa", "Error", JOptionPane.WARNING_MESSAGE);
                    }
            } catch (SQLException ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_platillosTableMouseClicked

    private void cancelarPedidoOpcionPopUpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarPedidoOpcionPopUpMenuActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "El platillo " +modelPedidosTable.getValueAt(pedidosTable.getSelectedRow(), 0) +
        " puede ser eliminado", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_cancelarPedidoOpcionPopUpMenuActionPerformed

    private void tabLPTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabLPTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabLPTotalTextFieldActionPerformed

    private void mwTabPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mwTabPaneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_mwTabPaneFocusGained

    private void mwTabPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mwTabPaneMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_mwTabPaneMouseClicked

    private void tabLPPagadoBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabLPPagadoBTNActionPerformed
        // TODO add your handling code here:
        try {
            if(modelPedidosTable.getRowCount()>0){
                String mesa = tabLPSelectorMesaCB.getSelectedItem().toString();
                control.limpiarPedidosMesa(mesa);
                this.limpiarTabla(modelPedidosTable, pedidosTable);
                this.resetTotal();
                JOptionPane.showMessageDialog(windowTablaPedidos, "Los pedidos se han limpiado", "Hecho", JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(windowTablaPedidos, "Primero debes haber realizado algun pedido", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabLPPagadoBTNActionPerformed

    private void tabAAgregarBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabAAgregarBTN1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabAAgregarBTN1ActionPerformed

    private void tabAAreaNombreTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabAAreaNombreTFFocusGained
        // TODO add your handling code here:
        if(tabAAreaNombreTF.getText().equals("Nuevo nombre"))tabAAreaNombreTF.setText("");
    }//GEN-LAST:event_tabAAreaNombreTFFocusGained

    private void tabAAreaNombreTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabAAreaNombreTFFocusLost
        // TODO add your handling code here:
        if(tabAAreaNombreTF.getText().equals(""))tabAAreaNombreTF.setText("Nuevo nombre");
    }//GEN-LAST:event_tabAAreaNombreTFFocusLost

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1FocusGained

    private void ttpTabAdministracionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ttpTabAdministracionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ttpTabAdministracionMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            String tipo =tabATipoPlatilloCB.getSelectedItem().toString();
            switch(tipo){
                case "Entrada": 
                    tipo = "pe";
                    if(jComboBox1.getItemCount()!=1){
                        jComboBox1.removeItemAt(2);
                    }
                    break;
                case "Plato Fuerte": tipo = "pf";
                    break;
                case "Postre": tipo = "pp";
                    break;
                case "Bebida": tipo = "pb";
                    break;
            }
            String[] elementos = control.getPlatillosByType(tipo);
            if(jComboBox1.getItemCount() != elementos.length){
                for(int i=0; i<elementos.length; i++){
                    jComboBox1.insertItemAt("" +elementos[i], i+1);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /*
    Funciones  creadas por mi
    */
    
    //Este metodo carga los datos para la tabla
    private void cargarTabla(String[][] datos, javax.swing.table.DefaultTableModel model, javax.swing.JTable table){
        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        table.setGridColor(Color.BLUE);
        table.setShowHorizontalLines(false);
        table.doLayout();
        
        //Función que rellena los datos de la tabla con los datos obtenidos
        String[] line = new String[datos[0].length];
        for (String[] dato : datos) {
            for (int column = 0; column<line.length; column++) {
                line[column] = "" + dato[column];
            }
            model.addRow(line);
        }
    }
    
    //Método que inicializa la ventana tableWindow
    private void beginTableWindow(){
        windowTablaPedidos.setVisible(true);
        windowTablaPedidos.setLocationRelativeTo(null);
        windowTablaPedidos.setIconImage(icon);
    }
    
    //Método que inicializa la tabla con la cabecera por defecto
    private void beginTable(javax.swing.table.DefaultTableModel model){
        String elementos[] = control.getHeader();
        for (String elemento : elementos) {
            model.addColumn(elemento);
        }
    }
    
    //Método que recibe un String[]. Inicializa la tabla con una cabecera personalizada
    private void beginTable(javax.swing.table.DefaultTableModel model, String[] header){
        String elementos[] = header;
        for (String elemento : elementos) {
            model.addColumn(elemento);
        }
    }
    
    //Carga los datos del tipo de salsa recibido String type
    private String[][] loadSaucersByType(String type){
        String[][] table = null;
        try {
            table = control.getThisTypeOfSauces(type);
        } catch (SQLException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
        return table;
    }
    
    //Deja vacía la tabla exceptuando el header, el cual se mantiene
    private void limpiarTabla(javax.swing.table.DefaultTableModel model, javax.swing.JTable table){
        int tableTotalRow = table.getRowCount();
        if (tableTotalRow != 0){ 
            //Una vez obtenido el table limpiamos la tabla
            for(int i = tableTotalRow-1; i >= 0; i--){
                model.removeRow(i);
            }
        }
    }
    
    //Función que actualiza el total de la tabla pedidosTable
    private void updateTotal (){
        int filas = pedidosTable.getRowCount();
        int columnaPrecio = 2;
        int columnaCantidad = 0;
        int cantidad;
        int precio;
        int total= 0;
        if(filas>0){
            for(int i = 0; i<filas; i++){
                cantidad = Integer.parseInt(""+modelPedidosTable.getValueAt(i, columnaPrecio));
                precio = Integer.parseInt(""+modelPedidosTable.getValueAt(i, columnaCantidad));
                total=total+(precio*cantidad);
            }
            tabLPTotalTextField.setText("" +total);
        }
    }
    
    private void resetTotal(){
        tabLPTotalTextField.setText("0");
    }
    
    private void tablaVacia(){}
    
    private void tiempoParaCancelar(){}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem cancelarPedidoOpcionPopUpMenu;
    private javax.swing.JSpinner cantidadProductoSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu menuPedidosPopUp;
    private java.awt.Label mwEasyBitesLabel;
    private javax.swing.JTabbedPane mwTabPane;
    private javax.swing.JTable pedidosTable;
    private javax.swing.JTable platillosTable;
    private javax.swing.JLabel seleccionarCantidadLabel;
    private javax.swing.JButton tabAAgregarBTN;
    private javax.swing.JButton tabAAgregarBTN1;
    private javax.swing.JLabel tabAAgregarPlatilloLabel;
    private javax.swing.JLabel tabAAgregarPlatilloLabel1;
    private javax.swing.JTextField tabAAreaNombreTF;
    private javax.swing.JLabel tabANombrePlatilloLabel;
    private javax.swing.JLabel tabANombrePlatilloLabel1;
    private javax.swing.JLabel tabAPrecioPlatilloLabel;
    private javax.swing.JTextField tabAPrecioPlatilloTF;
    private javax.swing.JComboBox<String> tabATipoPlatilloCB;
    private javax.swing.JLabel tabLP;
    private javax.swing.JButton tabLPPagadoBTN;
    private javax.swing.JScrollPane tabLPSelectMesaTableScrollPane;
    private javax.swing.JComboBox<String> tabLPSelectorMesaCB;
    private javax.swing.JLabel tabLPTotalLabel;
    private javax.swing.JTextField tabLPTotalTextField;
    private javax.swing.JButton tabPBebidasBTN;
    private javax.swing.JButton tabPEntradasBTN;
    private javax.swing.JButton tabPPlatosFuertesBTN;
    private javax.swing.JButton tabPPostresBTN;
    private javax.swing.JPanel tpTabListaPedidos;
    private javax.swing.JPanel tpTabProductos;
    private javax.swing.JPanel ttpTabAdministracion;
    private javax.swing.JLabel twSelecciónPlatilloLabel;
    private javax.swing.JScrollPane twTableScrollPane;
    private javax.swing.JButton twVolverBTN;
    private javax.swing.JFrame windowTablaPedidos;
    // End of variables declaration//GEN-END:variables
}
